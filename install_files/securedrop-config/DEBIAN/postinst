#!/bin/sh
# postinst script for securedrop-config

set -e
set -x

disable_upgrade_prompt() {
    # Disable do-release-upgrade notification
    sed -i 's/Prompt=.*/Prompt=never/' /etc/update-manager/release-upgrades || true
}
remove_2fa_tty_req() {
    # The goal here is to remove legacy 2FA req on TTY logins
    # Lets prevent this from bombing out the install though if it fails
    auth_file=/etc/pam.d/common-auth
    sed -i "/^auth\ required\ pam_google.*/d" ${auth_file} || true
    # Since we are removing the pam_google module, we must ensure password
    # authentication for sshd is disabled to ensure only key authentication is used.
    grep -qF "PasswordAuthentication no" /etc/ssh/sshd_config || echo "PasswordAuthentication no" >> /etc/ssh/sshd_config
    sed -i "/^UsePAM\ /s/\ .*/\ no/" /etc/ssh/sshd_config
    sed -i "/^ChallengeResponseAuthentication\ /s/\ .*/\ no/" /etc/ssh/sshd_config
    service ssh restart
}

allow_apt_user_in_iptables() {
    rules_v4="/etc/network/iptables/rules_v4"
    # During initial install, file won't exist on disk, so skip.
    if [ -f "$rules_v4" ]; then
        # Find already configured apt allow line, targeting root uid, and
        # subsitute entire line, dropping the uid targeting entirely,
        # so both Trusty and Xenial continue to work well when invoking apt.
        perl -npi -e \
            's/^.*--uid-owner root.*apt updates.*$/-A OUTPUT -p tcp --match multiport --dports 80,8080,443 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT -m comment --comment "apt updates"/' \
           "$rules_v4"

        # Remove root restriction for general DNS calls. Using matching
        # groups to preserve custom DNS settings via site-specific info.
        perl -npi -e \
            's/^(.*--dport 53) -m owner --uid-owner root(.*)$/$1$2/' \
           "$rules_v4"
    fi
}
# Tor 0.3.5.x series now defaults to v3 onion URLs, but SecureDrop currently
# uses v2 onion URLs. We must explictly set this definition in torrc to avoid
# breakage when upgrading from Tor 0.3.4.x to 0.3.5.x.
set_v2_hidserv_in_torrc() {
    if [ -f /etc/tor/torrc ]; then
        if ! grep -q HiddenServiceVersion /etc/tor/torrc ; then
            perl -pi -e 's/^(HiddenServiceDir.*)$/$1\nHiddenServiceVersion 2/' /etc/tor/torrc
        fi
    fi
}

manage_tor_repo_config() {
    # Ensure official Tor repo entry is removed, so that only FPF mirror is used.
    rm -f /etc/apt/sources.list.d/deb_torproject_org_torproject_org.list

    # Ensure FPF mirror config is removed, so that only primary FPF repo is used
    rm -f /etc/apt/sources.list.d/tor_apt_freedom_press.list

    # Remove references to separate Tor-specific repositories
    apt_security_list="/etc/apt/security.list"
    if [ -f "$apt_security_list" ]; then
        sed -i '/deb\.torproject\.org\/torproject\.org/d' "$apt_security_list"
        sed -i '/tor-apt\.freedom\.press/d' "$apt_security_list"
    fi
}

case "$1" in
    configure)

    manage_tor_repo_config
    remove_2fa_tty_req
    disable_upgrade_prompt

    # Remove cron-apt action should occur after security upgrades to avoid breaking
    # automatic upgrades (see issue #4003)
    if [ -f "/etc/cron-apt/action.d/1-remove" ]; then
        rm /etc/cron-apt/action.d/1-remove
    fi

    allow_apt_user_in_iptables
    set_v2_hidserv_in_torrc
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
